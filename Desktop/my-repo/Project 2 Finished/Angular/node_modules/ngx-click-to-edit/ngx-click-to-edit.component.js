import { Component, EventEmitter, Input, Output } from '@angular/core';
var NgxClickToEditComponent = (function () {
    function NgxClickToEditComponent() {
        this.field = 'field';
        this.unit = '';
        this.full = false;
        this.hideTrigger = false;
        this.type = 'string';
        this.show = false;
        this.value = '';
        this.onSave = new EventEmitter();
    }
    Object.defineProperty(NgxClickToEditComponent.prototype, "theValue", {
        set: function (value) {
            this.value = value;
            this.original = this.value;
        },
        enumerable: true,
        configurable: true
    });
    NgxClickToEditComponent.prototype.ngAfterViewInit = function () {
        if (typeof this.value === 'string') {
            this.type = 'string';
        }
        if (typeof this.value === 'number') {
            this.type = 'number';
        }
    };
    NgxClickToEditComponent.prototype.makeEditable = function (field) {
        if (this.hideTrigger === true) {
            this.show = true;
        }
        if (this.full === false && field === 'trigger') {
            this.show = true;
        }
        else if (this.full === true) {
            this.show = true;
        }
    };
    NgxClickToEditComponent.prototype.cancelEditable = function () {
        this.show = false;
        this.value = this.original;
    };
    NgxClickToEditComponent.prototype.onKey = function (event) {
        if (event.key === 'Enter') {
            this.callSave();
        }
        if (event.key === 'Escape') {
            this.cancelEditable();
        }
    };
    NgxClickToEditComponent.prototype.callSave = function () {
        this.onSave.emit({ field: this.field, value: this.value });
        this.show = false;
    };
    NgxClickToEditComponent.decorators = [
        { type: Component, args: [{
                    selector: 'click-to-edit',
                    template: "<div class=\"click-to-edit\">\n    <div class='ndv-comp' [ngClass]=\"{'ndv-active':show}\">\n        <input tabindex=\"-1\" *ngIf='show && type === \"string\"' type='text' [(ngModel)]='value' (keyup)=\"onKey($event)\"/>\n        <input tabindex=\"-1\" *ngIf='show && type === \"number\"' type='number' [min]=\"min\" [max]=\"max\" [(ngModel)]='value'\n               (keyup)=\"onKey($event)\"/>\n\n        <div *ngIf='!show'>\n            <div *ngIf=\"hideTrigger === false\">\n                <div #ref class=\"click-to-edit-content selectable\" (click)='makeEditable(\"trigger\")'><ng-content></ng-content></div>\n                <i class=\"fa fa-pencil selectable\" (click)='makeEditable(\"trigger\")' *ngIf=\"ref.childNodes.length == 0\"></i>\n            </div>\n            <div class=\"click-to-edit-value\" [class.selectable]=\"full === true || hideTrigger === true\"\n                 (click)='makeEditable(\"value\")' [innerHTML]=\"value || 'empty'\"></div>\n            <div class=\"click-to-edit-unit\" [class.selectable]=\"full === true || hideTrigger === true\"\n                 (click)='makeEditable(\"unit\")' *ngIf=\"unit !== ''\" [innerHTML]=\"unit\"></div>\n        </div>\n    </div>\n    <div class='ndv-buttons' *ngIf='show'>\n        <button class='btn-x-sm' (click)='callSave()'><i class=\"fa fa-check\"></i></button>\n        <button class='btn-x-sm' (click)='cancelEditable()'><i class=\"fa fa-times\"></i></button>\n    </div>\n</div>",
                    styles: [".click-to-edit {\n      width: inherit;\n}\n\n.selectable {\n    cursor: pointer;\n}\n\n.ndv-comp {\n    position: relative;\n    overflow: hidden;\n    min-width: 20px;\n    border-radius: 3px;\n    cursor: default;\n}\n\n.fa-pencil {\n    float: left;\n    padding-top: 2px;\n}\n\n.click-to-edit-content {\n    float: left;\n}\n\n.click-to-edit-value {\n    float: left;\n    min-width: 33px;\n    padding: 0 2px 0 8px;\n    text-align: right;\n}\n\n.click-to-edit-unit {\n    float: left;\n}\n\n.active-ndv {\n    background-color: transparent;\n}\ninput {\n    border-radius: 5px;\n    box-shadow: none;\n    min-width: 5px;\n    color: #000;\n}\n.ndv-buttons {\n    background-color: transparent;\n    border-top: none;\n    border-radius: 0 0 3px 3px;\n    box-shadow: 0 3px 6px rgba(111,111,111,0.2);\n    outline: none;\n    padding: 3px;\n    position: absolute;\n    margin-left: 6px;\n    z-index: 1;\n}\n.ndv-comp:hover {\n}\n.ndv-save {\n    margin-right:3px;\n}\n.ndv-active {\n    background-color: transparent;\n}"]
                },] },
    ];
    /** @nocollapse */
    NgxClickToEditComponent.ctorParameters = function () { return []; };
    NgxClickToEditComponent.propDecorators = {
        'min': [{ type: Input, args: ['min',] },],
        'max': [{ type: Input, args: ['max',] },],
        'field': [{ type: Input, args: ['field',] },],
        'unit': [{ type: Input, args: ['unit',] },],
        'full': [{ type: Input, args: ['full',] },],
        'hideTrigger': [{ type: Input, args: ['hideTrigger',] },],
        'type': [{ type: Input, args: ['type',] },],
        'theValue': [{ type: Input, args: ['value',] },],
        'onSave': [{ type: Output },],
    };
    return NgxClickToEditComponent;
}());
export { NgxClickToEditComponent };
//# sourceMappingURL=ngx-click-to-edit.component.js.map